npm i -D nodemon
그리고 package.json에
"scripts":{
    "starts": "nodemon app"
}
추가해주면 서버 코드가 수정될 때마다 자동으로 재시작됨.

------------------------------------------------------

const path = require("path");
...
res,sendFile(path.join(_dirname,'/index.html))
을 통해 html로 연결

---------------------------------------------------------

미들웨어
app.use(미들웨어)로 이용
app.use('/abc',미들웨어) abc로 시작하는 요청에서 미들웨어 실행
app.post('/abc',미들웨어)  abc로 시작하는 post 요청에서 미들웨어 실행

app.use('/abc',(req,res,next) => {
    ~~~
    next();
})

여기서 next를 실행하지 않으면 다음 미들웨어로 넘어가지 않음

--------------------------------------------------
npm i morgan cookie-parser express-session dotenv
실무에서 자주 사용하는 패키지

-----------------------------------------------
var contactSchema = mongoose.Schema({
  name:{type:String, required:true, unique:true},
  email:{type:String},
  phone:{type:String}
})
이런식으로 데이터베이스 스키마 설정 가능
var Contact = mongoose.model('contact',contactSchema)

mongoose.model(콜렉션 이름, mongoose.schema로 생성된 오브젝트)
이렇게 객체에 연결

Contact.find(검색조건, callback함수);
db에서 검색 조건에 맞는 모델을 찾고 콜백함수 호출

Contact.create(req.body,(err,contact) =>{})
db에 데이터 생성 .create(생성할 데이터,콜백함수)

Contact.findOne()
model에서 조건과 일치하는 하나만 찾아서 반환

Contact.findOneAndUpdate(조건,object(수정할내용),callback)
model에서 데이터를 하나 찾아서 수정
단, 이때 callback함수로 넘어가는 값은 수정되기 전의 값

Contact.deleteOne()
model에서 데이터를 하나 삭제

---------------------------------------------
<nav>
</nav>
메뉴,목차, 색인 등을 만들 때 사용
----------------------------------------------
npm install --save method-ovverride
put과 delete는 html에서 지원하지 않아서 methodoverride를 통해 우회해서 사용해야함

